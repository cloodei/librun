<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        evzAZvGbBg0AAAAASUVORK5CYII=
</value>
  </data>
</root>